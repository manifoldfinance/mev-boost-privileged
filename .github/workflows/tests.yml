name: Tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    name: Test on Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.20, 1.21, 1.22]

    steps:
      - name: Checkout sources
        id: checkout
        uses: actions/checkout@v3

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Cache Go modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install dependencies
        id: install-dependencies
        run: go mod download

      - name: Run unit tests and generate the coverage report
        id: test
        run: go test -coverprofile=coverage-${{ matrix.go-version }}.out -json > TestResults-${{ matrix.go-version }}.json

      - name: Upload coverage to Codecov
        id: upload-coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage-${{ matrix.go-version }}.out
          verbose: false
          flags: unittests-${{ matrix.go-version }}
